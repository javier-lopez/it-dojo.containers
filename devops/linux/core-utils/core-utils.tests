#!/bin/sh

test_db="/var/lib/core-utils.db"

#database exist?
[ -f "${test_db}" ] || exit 1

#override temp debug string, avoid "Bad substitution" errors
PS4=">>"

TESTS="$(grep '^@begin' "${test_db}" | sed -e 's/^@begin{//' -e 's/}.*$//')"

#move to a tmp subdirectory
rm -rf test.sd >/dev/null 2>&1
mkdir test.sd || exit 1
cd test.sd    || exit 1

failed="0"
passed="0"
ran="0"

printf "%s\\n\\n" "Info - running core-utils tests:"

[ -z "${1}" ] || TESTS="${1}"

for test in ${TESTS}; do
    rm -rf ./* >/dev/null 2>&1
    printf "%s\\n" "${test} .................................." | awk '{ printf("%s ", substr($0, 0, 35)); }'
    printf "%s\\n" "PATH=../:./:/bin:/usr/bin" > run.sh
    sed -e "/^@begin{$test}/,/^@end/p" -e '1,$d' ${test_db} |\
    sed -e '/^@begin/d' -e '/^@end/d' \
        -e 's/\([^\\]\)[ 	]*$/\1 || exit 1/g' >> run.sh
    printf "exit 0\\n" >> run.sh
    sh -x run.sh        > run.log 2>&1
    if [ "${?}" -ne "0" ]; then
        #generate report
        printf "FAILED\\n"
        printf "+---Test------------------------------\\n"
        cat run.sh | sed -e 's/^/| /g'
        printf "+---Trace-----------------------------\\n"
        cat run.log | sed -e 's/^/| /g'
        failed="$((${failed} + 1))"
        printf "+-------------------------------------\\n"
    else
    passed="$((${passed} + 1))"
        printf "ok\\n"
    fi
    ran="$((${ran} + 1))"
done

#result
if [ "${failed}" -gt "0" ]; then
    printf "FAILED: passed: ${passed}/${ran}, failed: ${failed}/${ran}\\n"
    #exit 1
else
    printf "OK: passed: ${passed}/${ran}\\n"
    cd .. && rm -rf test.sd >/dev/null 2>&1
fi

exit "$((${passed} + 100))"

# vim: set ts=8 sw=4 tw=0 ft=sh :
